
--- Script parsing start ---

  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_EXT_CREATE_OBJECT
  [  0] CBC_POP
  [  1] CBC_EXT_CREATE_OBJECT
  [  0] CBC_POP
  [  1] CBC_EXT_CREATE_OBJECT
  [  0] CBC_BRANCH_IF_FALSE_FORWARD
  [  1] CBC_POST_INCR_IDENT_PUSH_RESULT idx:1->ident(x)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_EXT_CREATE_OBJECT
  [  2] CBC_PUSH_LITERAL idx:4->string(exp)
  [  1] CBC_SET_PROPERTY idx:3->string(member)
  [  2] CBC_BINARY_ADD_TWO_LITERALS idx:6->ident(a) idx:7->ident(b)
  [  1] CBC_SET_PROPERTY idx:5->string(set)
  [  2] CBC_PUSH_IDENT idx:9->ident(c)
  [  1] CBC_SET_PROPERTY idx:8->string(get)
  [  0] CBC_ASSIGN_IDENT idx:2->var_ident(get)
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_EXT_CREATE_OBJECT
  [  2] CBC_PUSH_IDENT idx:6->ident(a)
  [  1] CBC_BRANCH_IF_FALSE_FORWARD
  [  2] CBC_PUSH_IDENT idx:7->ident(b)
  [  2] CBC_JUMP_FORWARD
  [  2] CBC_PUSH_IDENT idx:9->ident(c)
  [  1] CBC_SET_PROPERTY idx:8->string(get)
  [  2] CBC_PUSH_IDENT idx:11->ident(value)
  [  1] CBC_SET_PROPERTY idx:5->string(set)
  [  0] CBC_ASSIGN_IDENT idx:10->var_ident(set)
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_EXT_CREATE_OBJECT

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 1 bytes

--- Function parsing end ---

  [  2] CBC_PUSH_LITERAL idx:13->function
  [  1] CBC_SET_PROPERTY idx:12->string(function)

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 1 bytes

--- Function parsing end ---

  [  2] CBC_PUSH_LITERAL idx:14->function
  [  1] CBC_EXT_SET_GETTER idx:8->string(get)

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 1
  Literal encoding: small
  Argument range end: 1
  Register range end: 1
  Identifier range end: 1
  Literal range end: 1

   0 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 1 bytes

--- Function parsing end ---

  [  2] CBC_PUSH_LITERAL idx:15->function
  [  1] CBC_EXT_SET_SETTER idx:5->string(set)

--- Function parsing start ---


Final byte code dump:

  Maximum stack depth: 0
  Literal encoding: small
  Argument range end: 0
  Register range end: 0
  Identifier range end: 0
  Literal range end: 0

   0 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 1 bytes

--- Function parsing end ---

  [  2] CBC_PUSH_LITERAL idx:16->function
  [  1] CBC_EXT_SET_GETTER idx:8->string(get)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_EXT_CREATE_OBJECT
  [  2] CBC_PUSH_LITERAL idx:18->number(0x09Af)
  [  1] CBC_SET_PROPERTY idx:17->number(.3)
  [  2] CBC_PUSH_LITERAL idx:20->number(14.)
  [  1] CBC_SET_PROPERTY idx:19->number(12e-1)
  [  2] CBC_EXT_CREATE_OBJECT
  [  3] CBC_BINARY_ADD_TWO_LITERALS idx:23->number(0.077) idx:24->number(9074)
  [  2] CBC_SET_PROPERTY idx:22->number(0e+3)
  [  1] CBC_SET_PROPERTY idx:21->number(0XFaBe0189)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK

Final byte code dump:

  Maximum stack depth: 5
  Literal encoding: small
  Argument range end: 0
  Register range end: 2
  Identifier range end: 8
  Literal range end: 25

   0 : CBC_PUSH_IDENT idx:2(ident)->ident(next_statement)
   2 : CBC_POP_BLOCK
   3 : CBC_EXT_CREATE_OBJECT
   5 : CBC_POP
   6 : CBC_EXT_CREATE_OBJECT
   8 : CBC_POP
   9 : CBC_EXT_CREATE_OBJECT
  11 : CBC_BRANCH_IF_FALSE_FORWARD offset:5(->16)
  13 : CBC_POST_INCR_IDENT_PUSH_RESULT idx:3(ident)->ident(x)
  15 : CBC_POP_BLOCK
  16 : CBC_PUSH_IDENT idx:2(ident)->ident(next_statement)
  18 : CBC_POP_BLOCK
  19 : CBC_EXT_CREATE_OBJECT
  21 : CBC_PUSH_LITERAL idx:9(lit)->string(exp)
  23 : CBC_SET_PROPERTY idx:8(lit)->string(member)
  25 : CBC_BINARY_ADD_TWO_LITERALS idx:4(ident)->ident(a) idx:5(ident)->ident(b)
  28 : CBC_SET_PROPERTY idx:10(lit)->string(set)
  30 : CBC_PUSH_IDENT idx:6(ident)->ident(c)
  32 : CBC_SET_PROPERTY idx:11(lit)->string(get)
  34 : CBC_ASSIGN_IDENT idx:0(reg)->var_ident(get)
  36 : CBC_PUSH_IDENT idx:2(ident)->ident(next_statement)
  38 : CBC_POP_BLOCK
  39 : CBC_EXT_CREATE_OBJECT
  41 : CBC_PUSH_IDENT idx:4(ident)->ident(a)
  43 : CBC_BRANCH_IF_FALSE_FORWARD offset:6(->49)
  45 : CBC_PUSH_IDENT idx:5(ident)->ident(b)
  47 : CBC_JUMP_FORWARD offset:4(->51)
  49 : CBC_PUSH_IDENT idx:6(ident)->ident(c)
  51 : CBC_SET_PROPERTY idx:11(lit)->string(get)
  53 : CBC_PUSH_IDENT idx:7(ident)->ident(value)
  55 : CBC_SET_PROPERTY idx:10(lit)->string(set)
  57 : CBC_ASSIGN_IDENT idx:1(reg)->var_ident(set)
  59 : CBC_PUSH_IDENT idx:2(ident)->ident(next_statement)
  61 : CBC_POP_BLOCK
  62 : CBC_EXT_CREATE_OBJECT
  64 : CBC_PUSH_LITERAL idx:13(lit)->function
  66 : CBC_SET_PROPERTY idx:12(lit)->string(function)
  68 : CBC_PUSH_LITERAL idx:14(lit)->function
  70 : CBC_EXT_SET_GETTER idx:11(lit)->string(get)
  73 : CBC_PUSH_LITERAL idx:15(lit)->function
  75 : CBC_EXT_SET_SETTER idx:10(lit)->string(set)
  78 : CBC_PUSH_LITERAL idx:16(lit)->function
  80 : CBC_EXT_SET_GETTER idx:11(lit)->string(get)
  83 : CBC_POP_BLOCK
  84 : CBC_PUSH_IDENT idx:2(ident)->ident(next_statement)
  86 : CBC_POP_BLOCK
  87 : CBC_EXT_CREATE_OBJECT
  89 : CBC_PUSH_LITERAL idx:18(lit)->number(0x09Af)
  91 : CBC_SET_PROPERTY idx:17(lit)->number(.3)
  93 : CBC_PUSH_LITERAL idx:20(lit)->number(14.)
  95 : CBC_SET_PROPERTY idx:19(lit)->number(12e-1)
  97 : CBC_EXT_CREATE_OBJECT
  99 : CBC_BINARY_ADD_TWO_LITERALS idx:23(lit)->number(0.077) idx:24(lit)->number(9074)
 102 : CBC_SET_PROPERTY idx:22(lit)->number(0e+3)
 104 : CBC_SET_PROPERTY idx:21(lit)->number(0XFaBe0189)
 106 : CBC_POP_BLOCK
 107 : CBC_PUSH_IDENT idx:2(ident)->ident(next_statement)
 109 : CBC_POP_BLOCK
 110 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 111 bytes

Script parsing successfully completed. Total byte code size: 115 bytes

--- Script parsing end ---

