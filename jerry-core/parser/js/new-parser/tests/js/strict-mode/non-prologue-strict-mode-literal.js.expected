
--- Script parsing start ---

  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:1->string(use strict)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_IDENT idx:0->ident(next_statement)
  [  0] CBC_POP_BLOCK
  [  1] CBC_PUSH_LITERAL idx:1->string(use strict)
  [  0] CBC_POP_BLOCK

--- Function parsing start ---

  Note: legacy (non-strict) argument definition

  [  0] CBC_RETURN_WITH_UNDEFINED

Final byte code dump:

  Maximum stack depth: 1
  Literal encoding: small
  Argument range end: 1
  Register range end: 1
  Identifier range end: 1
  Literal range end: 1

   0 : CBC_RETURN_WITH_UNDEFINED
   1 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 2 bytes

--- Function parsing end ---


Final byte code dump:

  Maximum stack depth: 3
  Literal encoding: small
  Argument range end: 0
  Register range end: 2
  Identifier range end: 3
  Literal range end: 5

   0 : CBC_DEFINE_FUNCTION idx:1(reg)->var_ident(non_strict_mode) idx:4(lit)->function
   3 : CBC_PUSH_IDENT idx:2(ident)->ident(next_statement)
   5 : CBC_POP_BLOCK
   6 : CBC_PUSH_LITERAL idx:3(lit)->string(use strict)
   8 : CBC_POP_BLOCK
   9 : CBC_PUSH_IDENT idx:2(ident)->ident(next_statement)
  11 : CBC_POP_BLOCK
  12 : CBC_PUSH_LITERAL idx:3(lit)->string(use strict)
  14 : CBC_POP_BLOCK
  15 : CBC_RETURN_WITH_UNDEFINED

Byte code size: 16 bytes

Script parsing successfully completed. Total byte code size: 18 bytes

--- Script parsing end ---

